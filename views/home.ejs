<%- include('header.ejs') %>
  <style>
    .disabledbutton {
    pointer-events: none;
    opacity: 0.4;
}
  </style>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
 
  <div class="container-fluid px-4">
    <h1 class="mt-4">Controller</h1>
    <div class="row">
    <div class="col-xl-12">
      <div class="card shadow mb-4">
        <div class="card-header">
          <h6 class="m-0 font-weight-bold text-primary">Auto/Manuel</h6>
        </div>
        <div class="card-body">
          <div id="toggleButton" class="btn btn-primary" onclick="toogleMode()">
            <span class="text fill">Automatic</span>
          </div>
          <div>
            <br>
          </div>
          <div class="row">
            <div class="col-xl-6">
          <label for="pressure" class="form-label">Pressure Level</label>
        <input type="range" class="form-control-range" min="0" max="120" step="1" id="pressure" style="width:50%;"oninput="this.nextElementSibling.value = this.value"
        onchange="pressureChanged(this)">
          <output>60</output> Pa
          </div>
          <div class="col-xl-6">
          <label for="fanspeed">Fan Speed</label>
          <input type="range" class="form-control-range disabledbutton" min="0" max="100" step="1" id="fanspeed" style="width:50%; " oninput="this.nextElementSibling.value = this.value"
          onchange="speedChanged(this)">
          <output>50</output> %
          </div>
        </div>
      </div>
    </div>
   </div>
  </div>
  </div>
  <div class="container-fluid px-4">
    <h1 class="mt-4">Monitoring</h1>
    <div class="row">
      <div class="col-xl-6">
        <div class="card shadow mb-6">
          <div class="card-header">
            <h6 class="m-0 font-weight-bold text-primary">Pressure</h6>

          </div>
          <div class="card-body">
            <canvas height="40" id="pressureChart" width="100%"></canvas>

          </div>
        </div>
      </div>
      <div class="col-xl-6">
        <div class="card shadow mb-6">
          <div class="card-header">
            <h6 class="m-0 font-weight-bold text-primary">Speed</h6>
          </div>
          <div class="card-body">
            <canvas height="40" id="speedChart" width="100%"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script crossorigin="anonymous"
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="js/scripts.js"></script>
  <script crossorigin="anonymous" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"></script>

  <script crossorigin="anonymous" src="https://cdn.jsdelivr.net/npm/simple-datatables@latest"></script>
  <script src="js/datatables-simple-demo.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js">
  </script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-gauge@0.3.0/dist/chartjs-gauge.min.js"></script>

  <script>

    var ctxSpeed = document.getElementById("speedChart").getContext("2d");
    var chartSpeed = new Chart(ctxSpeed, {
      type: 'gauge',
      data: {
        datasets: [{
          value: 89,
          minValue: 0,
          data: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
          backgroundColor: ['green', 'green', 'green', 'green', 'green', 'orange', 'orange', 'orange', 'red', 'red'],
        }]
      },
      options: {
        needle: {
          radiusPercentage: 2,
          widthPercentage: 3.2,
          lengthPercentage: 80,
          color: 'rgba(0, 0, 0, 1)'
        },
        valueLabel: {
          display: true,
          formatter: (value) => {
            return Math.round(value) + " %";
          },
          color: 'rgba(255, 255, 255, 1)',
          backgroundColor: 'rgba(0, 0, 0, 1)',
          borderRadius: 5,
          padding: {
            top: 10,
            bottom: 10
          }
        }
      }
    });


    var ctxPressure = document.getElementById("pressureChart").getContext("2d");
    var pressureChart = new Chart(ctxPressure, {
      type: 'gauge',
      data: {
        datasets: [{
          value: 75,
          minValue: 0,
          data: [20, 40, 60, 80, 100, 120, 140],
          backgroundColor: ['green', 'green', 'green', 'green', 'orange', 'orange', "red", "red"],
        }]
      },
      options: {
        needle: {
          radiusPercentage: 2,
          widthPercentage: 3.2,
          lengthPercentage: 80,
          color: 'rgba(0, 0, 0, 1)'
        },
        valueLabel: {
          display: true,
          formatter: (value) => {
            return Math.round(value) + " Pa";
          },
          color: 'rgba(255, 255, 255, 1)',
          backgroundColor: 'rgba(0, 0, 0, 1)',
          borderRadius: 5,
          padding: {
            top: 10,
            bottom: 10
          }
        }
      }
    });


  let hostname = window.location.hostname;
  let socket = new WebSocket("ws://" + hostname+":3001");

  socket.onopen = function(e) {
    console.log("Connected to WS Server...");
  };

  // receive Pressure and Speed data and display
  socket.onmessage = function(event) {
    console.log("Received data from server: " + event.data);
    var dataObj = JSON.parse(event.data);

    chartSpeed.data.datasets[0].value = dataObj.speed;
    chartSpeed.update();
    pressureChart.data.datasets[0].value = dataObj.pressure;
    pressureChart.update();
  };


  function toogleMode() {
    var label = document.getElementById("toggleButton").innerText;
    // Get the output text
    var auto = document.getElementById("pressure");
    var manual = document.getElementById("fanspeed");

    // If the checkbox is checked, display the output text
    if (label === 'Automatic') {
      document.getElementById("toggleButton").innerText = "Manuel";
      auto.classList.add("disabledbutton");
      manual.classList.remove("disabledbutton");
      //sendSpeed();
    } 
    else {
      document.getElementById("toggleButton").innerText = "Automatic";
      auto.classList.remove("disabledbutton");
      manual.classList.add("disabledbutton");
      //sendPressure();
    }
  }

  function sendSpeed()
  {
    var speed = document.getElementById("fanspeed").value;
    var msg = {"auto": false, "speed": parseInt(speed)};
    socket.send(JSON.stringify(msg));
  }
  function sendPressure()
  {
    var pressure = document.getElementById("pressure").value;
    var msg = '{"auto": true, "pressure":' + pressure + '}';
    socket.send(msg);
  }

  function speedChanged(e)
  {
    sendSpeed();
  }

  function pressureChanged(e)
  {
    sendPressure();
  }
</script>

<%- include('footer.ejs') %>